# automatically generated by the FlatBuffers compiler, do not modify

# namespace: response

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Response(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Response()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsResponse(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Response
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Response
    def Status(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Response
    def BodyType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # Response
    def Body(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def ResponseStart(builder):
    builder.StartObject(3)

def Start(builder):
    ResponseStart(builder)

def ResponseAddStatus(builder, status):
    builder.PrependInt8Slot(0, status, 0)

def AddStatus(builder, status):
    ResponseAddStatus(builder, status)

def ResponseAddBodyType(builder, bodyType):
    builder.PrependUint8Slot(1, bodyType, 0)

def AddBodyType(builder, bodyType):
    ResponseAddBodyType(builder, bodyType)

def ResponseAddBody(builder, body):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(body), 0)

def AddBody(builder, body):
    ResponseAddBody(builder, body)

def ResponseEnd(builder):
    return builder.EndObject()

def End(builder):
    return ResponseEnd(builder)
